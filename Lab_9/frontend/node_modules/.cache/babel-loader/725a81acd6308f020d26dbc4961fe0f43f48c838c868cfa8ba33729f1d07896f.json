{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to: ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log('Response received:', response.status);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('Response error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// User API endpoints\nexport const userAPI = {\n  // Register a new user\n  register: async userData => {\n    const formData = new FormData();\n\n    // Append text fields\n    Object.keys(userData).forEach(key => {\n      if (key !== 'profile_picture') {\n        formData.append(key, userData[key]);\n      }\n    });\n\n    // Append file if exists\n    if (userData.profile_picture) {\n      formData.append('profile_picture', userData.profile_picture);\n    }\n    const response = await api.post('/users/register', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Get all users\n  getAllUsers: async () => {\n    const response = await api.get('/users');\n    return response.data;\n  },\n  // Get user by ID\n  getUserById: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  // Update user\n  updateUser: async (id, userData) => {\n    const formData = new FormData();\n\n    // Append text fields\n    Object.keys(userData).forEach(key => {\n      if (key !== 'profile_picture') {\n        formData.append(key, userData[key]);\n      }\n    });\n\n    // Append file if exists\n    if (userData.profile_picture && userData.profile_picture instanceof File) {\n      formData.append('profile_picture', userData.profile_picture);\n    }\n    const response = await api.put(`/users/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Delete user\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  },\n  // Confirm email\n  confirmEmail: async id => {\n    const response = await api.put(`/users/${id}/confirm-email`);\n    return response.data;\n  },\n  // Get user statistics\n  getUserStats: async () => {\n    const response = await api.get('/users/stats');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","userAPI","register","userData","formData","FormData","Object","keys","forEach","key","append","profile_picture","post","getAllUsers","get","getUserById","id","updateUser","File","put","deleteUser","delete","confirmEmail","getUserStats"],"sources":["D:/MCA/FSD/fullstack-user-management/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to: ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// User API endpoints\r\nexport const userAPI = {\r\n  // Register a new user\r\n  register: async (userData) => {\r\n    const formData = new FormData();\r\n    \r\n    // Append text fields\r\n    Object.keys(userData).forEach(key => {\r\n      if (key !== 'profile_picture') {\r\n        formData.append(key, userData[key]);\r\n      }\r\n    });\r\n    \r\n    // Append file if exists\r\n    if (userData.profile_picture) {\r\n      formData.append('profile_picture', userData.profile_picture);\r\n    }\r\n    \r\n    const response = await api.post('/users/register', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Get all users\r\n  getAllUsers: async () => {\r\n    const response = await api.get('/users');\r\n    return response.data;\r\n  },\r\n\r\n  // Get user by ID\r\n  getUserById: async (id) => {\r\n    const response = await api.get(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update user\r\n  updateUser: async (id, userData) => {\r\n    const formData = new FormData();\r\n    \r\n    // Append text fields\r\n    Object.keys(userData).forEach(key => {\r\n      if (key !== 'profile_picture') {\r\n        formData.append(key, userData[key]);\r\n      }\r\n    });\r\n    \r\n    // Append file if exists\r\n    if (userData.profile_picture && userData.profile_picture instanceof File) {\r\n      formData.append('profile_picture', userData.profile_picture);\r\n    }\r\n    \r\n    const response = await api.put(`/users/${id}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Delete user\r\n  deleteUser: async (id) => {\r\n    const response = await api.delete(`/users/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Confirm email\r\n  confirmEmail: async (id) => {\r\n    const response = await api.put(`/users/${id}/confirm-email`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user statistics\r\n  getUserStats: async () => {\r\n    const response = await api.get('/users/stats');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}